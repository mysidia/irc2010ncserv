#ifndef __options_h_include__
#define __options_h_include__
#define OPTIONS_H

#if 0
/*
   NOTE: this file's format is now too complicated to convert into
         a header file without using the conf.c program ;/

 the interpreter func uses the following to determine how to handle
 a line:
          @ = bool var  def/undef
          S = string var
          s = string var def/undef
          + = numeral
          ^ = numeral def/undef
	  ! = literal
	  & <rule> <value> = option rules
	R  = string that needs to go into the Makefile
*/
#endif



=/* Hurt Limit
= *  what is the maximum # of hurts an oper should be able to
= *  perform per command ?
= */
&MAX 50
&MIN 20
+#define MAXHURTS 25
&CLEAR



= /* SOR1_COMPAT - do you want to allow sor1.1.1 servers to connect
=                  and enable compatibility stuff for them ? */
@#define SOR1_COMPAT

=COMSTUD DEBUG
=	- enables debugging functions <i guess>
@#undef COMSTUD_DEBUG

#define FDLISTCHKFREQ 10

=Define this if you want to use poll()
@#define HAVE_POLL
#undef  VALLOC                  /* Define this if you have valloc(3) */

#ifdef APOLLO
#define RESTARTING_SYSTEMCALLS
#endif                            /* read/write are restarted after signals
                                     defining this 1, gets siginterrupt call
                                     compiled, which attempts to remove this
                                     behaviour (apollo sr10.1/bsd4.3 needs
                                     this) */

/*
 * If your host supports varargs and has vsprintf(), vprintf() and vscanf()
 * C calls in its library, then you can define USE_VARARGS to use varargs
 * instead of imitation variable arg passing.
#undef  USE_VARARGS
 * NOTE: with current server code, varargs doesn't survive because it can't
 *       be used in a chain of 3 or more funtions which all have a variable
 *       number of params.  If anyone has a solution to this, please notify
 *       the maintainer.
 */

#undef  DEBUGMODE               /* define DEBUGMODE to enable debugging mode.*/

=Directory where helpfiles are located
S#define HPATH   "/usr/src/ircd"

/* dpath named as IRCDDIR for the purpose of the Makefile */
=Directory where all ircd's junk is stored
r#define IRCDDIR "./"    /* dir where all ircd stuff is */
#define DPATH   IRCDDIR
=name of ircd binary
S#define SPATH   "./ircd"
=name of ircd configuration file
S#define CPATH   "ircd.conf"     /* server configuration file */
=relative path to file containing klines
S#define KPATH   "klines/klines.conf"    /* config file containing K:lines */
=relative path to motd file
S#define MPATH   "ircd.motd"     /* server MOTD file */
#define LPATH   "ircd.log" /* Where the debug file lives, if DEBUGMODE */
#define PPATH   "ircd.pid"      /* file for server pid */


/*
 * Define this filename to maintain a list of persons who log
 * into this server. Logging will stop when the file does not exist.
 * Logging will be disable also if you do not define this.
 * FNAME_USERLOG just logs user connections, FNAME_OPERLOG logs every
 * successful use of /oper.  These are either full paths or files within DPATH.
 */

#define FNAME_USERLOG "./logs/users.log"

=Log every successful oper ?
=(use 'none' to prevent logging)
S#define FNAME_OPERLOG "./logs/opers.log"


/* SHOW_INVISIBLE_LUSERS
 *
 * As defined this will show the correct invisible count for anyone who does
 * LUSERS on your server. On a large net this doesnt mean much, but on a
 * small net it might be an advantage to undefine it.
 */
#define SHOW_INVISIBLE_LUSERS

/* NO_DEFAULT_INVISIBLE
 *
 * When defined, your users will not automatically be attributed with user
 * mode "i" (i == invisible). Invisibility means people dont showup in
 * WHO or NAMES unless they are on the same channel as you.
 */
#define NO_DEFAULT_INVISIBLE


/* TS_ONLY
 *
 * When defined, the server will refuse to directly link to non-TS servers.
 * Remote servers can still be non-TS, although that basically keeps channel
 * TS's to 0 so it's not a good idea.  Defining TS_ONLY speeds the server
 * up by removing some compatibility code.
 */
/*#define TS_ONLY               == not until all servers are upgraded */


/* TS_WARNINGS
 *
 * When defined, +s users are warned of some things that should never
 * happen on an all-TS net.  Currently these are: server-generated MODE +o,
 * new nicks without a TS, and remote JOINs for non-existing channels.
 * This is useful to track down anomalies;  undefine it on a mixed TS/nonTS
 * net or you'll get a lot of warnings!
 */
/*#define TS_WARNINGS*/

#define OPER_KILL

#if 0
=Do you want opers to be able to /rehash your server ?
#endif
@#define OPER_REHASH

#if 0
=Do you want opers to be able to /restart your server ?
#endif
@#define  OPER_RESTART

#if 0
=Do you want opers to be able to /die your server ?
#endif
@#define  OPER_DIE

#define OPER_REMOTE

#if 0
=Do you want locops to be able to /rehash your server ?
#endif
@#undef  LOCOP_REHASH
#undef  LOCOP_RESTART
#undef  LOCOP_DIE

#define MAXIMUM_LINKS 10

#if 0
=/*
= * If your server is running as a a HUB Server then define this.
= * A HUB Server has many servers connect to it at the same as opposed
= * to a leaf which just has 1 server (typically the uplink). Define this
= * correctly for performance reasons.
= */
#endif
@#define HUB

#undef R_LINES

#ifdef  R_LINES
/* Also, even if you have R lines defined, you might not want them to be
   checked everywhere, since it could cost lots of time and delay. Therefore,
   The following two options are also offered:  R_LINES_REHASH rechecks for
   R lines after a rehash, and R_LINES_OFTEN, which rechecks it as often
   as it does K lines.  Note that R_LINES_OFTEN is *very* likely to cause
   a resource drain, use at your own risk.  R_LINES_REHASH shouldn't be too
   bad, assuming the programs are fairly short. */
#define R_LINES_REHASH
#define R_LINES_OFTEN
#endif

#if 0
=/*
= * NOTE: defining CMDLINE_CONFIG and installing ircd SUID or SGID is a MAJOR
= *       security problem - they can use the "-f" option to read any files
= *       that the 'new' access lets them. Note also that defining this is
= *       a major security hole if your ircd goes down and some other user
= *       starts up the server with a new conf file that has some extra
= *       O-lines. So don't use this unless you're debugging.
= */
#endif
@#undef  CMDLINE_CONFIG /* allow conf-file to be specified on command line */

/*
 * To use m4 as a preprocessor on the ircd.conf file, define M4_PREPROC.
 * The server will then call m4 each time it reads the ircd.conf file,
 * reading m4 output as the server's ircd.conf file.
 */
#undef  M4_PREPROC

/*
 * If you wish to have the server send 'vital' messages about server
 * through syslog, define USE_SYSLOG. Only system errors and events critical
 * to the server are logged although if this is defined with FNAME_USERLOG,
 * syslog() is used instead of the above file. It is not recommended that
 * this option is used unless you tell the system administrator beforehand
 * and obtain their permission to send messages to the system log files.
 */
#undef  USE_SYSLOG


#ifdef  USE_SYSLOG
/*
 * If you use syslog above, you may want to turn some (none) of the
 * spurious log messages for KILL/SQUIT off.
 */
#undef  SYSLOG_KILL     /* log all operator kills to syslog */
#undef  SYSLOG_SQUIT    /* log all remote squits for all servers to syslog */
#undef  SYSLOG_CONNECT  /* log remote connect messages for other all servs */
#undef  SYSLOG_USERS    /* send userlog stuff to syslog */
#undef  SYSLOG_OPER     /* log all users who successfully become an Op */

/*
 * If you want to log to a different facility than DAEMON, change
 * this define.
 */
#define LOG_FACILITY LOG_LOCAL1
#endif /* USE_SYSLOG */

#if 0
=/*
= * define this if you want to use crypted passwords for operators in your
= * ircd.conf file. See ircd/crypt/README for more details on this.
= */
#endif
@#define CRYPT_OPER_PASSWORD

#if 0
=/*
= * If you want to store encrypted passwords in N-lines for server links,
= * define this.  For a C/N pair in your ircd.conf file, the password
= * need not be the same for both, as long as hte opposite end has the
= * right password in the opposite line.  See INSTALL doc for more details.
= */
#endif
@#undef  CRYPT_LINK_PASSWORD

#define IDLE_FROM_MSG
#define MAXSENDQLENGTH 4000000
#define BUFFERPOOL     (8 * MAXSENDQLENGTH)
#define UNIXPORT
#undef  IRC_UID
#undef  IRC_GID
/*
 * CLIENT_FLOOD
 *
 * this controls the number of bytes the server will allow a client to
 * send to the server without processing before disconnecting the client for
 * flooding it.  Values greater than 8000 make no difference to the server.
 */
#define CLIENT_FLOOD    2024

/* Define this if you want the server to accomplish ircII standard */
/* Sends an extra NOTICE in the beginning of client connection     */
#undef  IRCII_KLUDGE

/*   STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP
*/

/* You shouldn't change anything below this line, unless absolutely needed. */

#ifdef  OPER_KILL
/* LOCAL_KILL_ONLY
 *
 * To be used, OPER_KILL must be defined.
 * LOCAL_KILL_ONLY restricts KILLs to clients which are connected to the
 * server the Operator is connected to (ie lets them deal with local
 * problem users or 'ghost' clients
 *
 * NOTE: #define'ing this on an IRC net with servers which have a version
 *       earlier than 2.7 is prohibited.  Such an action and subsequent use
 *       of KILL for non-local clients should be punished by removal of the
 *       server's links (if only for ignoring this warning!).
 */
#undef  LOCAL_KILL_ONLY
#endif

/*
 * Port where ircd resides. NOTE: This *MUST* be greater than 1024 if you
 * plan to run ircd under any other uid than root.
 */
#define PORTNUM 9000            /* port 9000 for SorceryNet! */

#if 0
=/* MAXCONNECTIONS
= * Maximum number of network connections your server will allow.  This should
= * never exceed max. number of open file descrpitors and wont increase this.
= * Should remain LOW as possible. Most sites will usually have under 30 or so
= * connections. A busy hub or server may need this to be as high as 50 or 60.
= * Making it over 100 decreases any performance boost gained from it being low.
= * if you have a lot of server connections, it may be worth splitting the load
= * over 2 or more servers.
= * 1 server = 1 connection, 1 user = 1 connection.
= * This should be at *least* 3: 1 listen port, 1 dns port + 1 client
= */
#endif
+#define MAXCONNECTIONS  3000

#if 0
=/* NICKNAMEHISTORYLENGTH
= * this defines the length of the nickname history.  each time a user changes
= * nickname or signs off, their old nickname is added to the top of the list.
= * this is used for /whowas and /kill nick chasing
= */
#endif
+#define NICKNAMEHISTORYLENGTH 350


/*
 * Time interval to wait and if no messages have been received, then check for
 * PINGFREQUENCY and CONNECTFREQUENCY
 */
#define TIMESEC  60             /* Recommended value: 60 */

/*
 * If daemon doesn't receive anything from any of its links within
 * PINGFREQUENCY seconds, then the server will attempt to check for
 * an active link with a PING message. If no reply is received within
 * (PINGFREQUENCY * 2) seconds, then the connection will be closed.
 */
#define PINGFREQUENCY    120    /* Recommended value: 120 */


/*
 * If the connection to to uphost is down, then attempt to reconnect every
 * CONNECTFREQUENCY  seconds.
 */
#define CONNECTFREQUENCY 600    /* Recommended value: 600 */

/*
 * Often net breaks for a short time and it's useful to try to
 * establishing the same connection again faster than CONNECTFREQUENCY
 * would allow. But, to keep trying on bad connection, we require
 * that connection has been open for certain minimum time
 * (HANGONGOODLINK) and we give the net few seconds to steady
 * (HANGONRETRYDELAY). This latter has to be long enough that the
 * other end of the connection has time to notice it broke too.
 */
#define HANGONRETRYDELAY 20     /* Recommended value: 20 seconds */
#define HANGONGOODLINK 1800     /* Recommended value: 30 minutes */


/*
 * Number of seconds to wait for write to complete if stuck.
 */
#define WRITEWAITDELAY     15   /* Recommended value: 15 */

/*
 * Number of seconds to wait for a connect(2) call to complete.
 * NOTE: this must be at *LEAST* 10.  When a client connects, it has
 * CONNECTTIMEOUT - 10 seconds for its host to respond to an ident lookup
 * query and for a DNS answer to be retrieved.
 */
#define CONNECTTIMEOUT  30      /* Recommended value: 30 */


/*
 * Max time from the nickname change that still causes KILL
 * automaticly to switch for the current nick of that user. (seconds)
 */
#define KILLCHASETIMELIMIT 90   /* Recommended value: 90 */

/*
 * Max number of channels a user is allowed to join.
 */
#define MAXCHANNELSPERUSER  10  /* Recommended value: 10 */

/*
 * SendQ-Always causes the server to put all outbound data into the sendq and
 * flushing the sendq at the end of input processing. This should cause more
 * efficient write's to be made to the network.
 * There *shouldn't* be any problems with this method.
 * -avalon
 */
#define SENDQ_ALWAYS

#undef PUT_KLINES_IN_IRCD_CONF
#undef SEPARATE_QUOTE_KLINES_BY_DATE

/* ------------------------- END CONFIGURATION SECTION -------------------- */
/*
**  $\Id: comstud.h,v 1.1.1.1 1998/01/18 02:32:16 mysidia Exp $
*/

=/* OLD_Y_LIMIT     - CSr30 now makes Y: limits the GLOBAL limit.
= *                   See README.CS.  If you prefer the old way (WHY?),
= *                   define this.
= */
@#undef OLD_Y_LIMIT

=/* G_LINES         - Define this if you want to listen to GLines
= *                   See README.CS
= */
@#define G_LINES

=/* FNAME_GLINELOG  - Logfile for glines
=*/
@#define FNAME_GLINELOG "logs/gline.log"

=/* I_LINES         - Treed I: lines.  Yes, that's right.  Some of
= *                   you might have to redo your I: lines if you wish
= *                  to use this.  This code will not help those with
= *                   very few I: lines.
= *
= *                  The format in ircd.conf is:
= *                  I:user@host:password:user@host:port:class
= *                  This will add 2 entries, unless they are both
= *                  identical.  Ip numbers are supported on either
= *                  side.  Also note, if for "user@host" you have "X"
= *                  or "NOMATCH" or "NOMATCHME", that entry will be
= *                  ignored.

                     (The format of I:'s may change in the future to be
                     exactly like K:'s)
= */

@#undef I_LINES


/* SHOW_NICKCHANGES - I'm not a real fan of this, but it shows
                      *LOCAL* nick changes in umode +n.  This
                      information can be obtained from /trace anyway.
*/
#undef SHOW_NICKCHANGES


=/* SHOW_HEADERS
= *		   - Taner's code for seeing what the server is doing
= *		     when you connect to it.
= */
@#undef SHOW_HEADERS
 

=/* Z_LINES
= *		   - Define this for .conf lines that basically
= *                   ignore a site.  If they try to connect to your
= *                   server, the connection will be closed immediately.
= *                   Note: You must specify ip#'s...and usernames aren't
= *                   allowed (won't be matched).
= *
= *                *NOTE* in efnet ircd, they were called D:lines
= *                       changed to keep compatibility with 
= *                       dal4.4.12 ircd.confs
= */
@#define Z_LINES

=/* FNAME_DLINE_LOG
= *                 - Define this to a filename to log ip#'s that have
= *                   been rejected from connecting to the server...
= */
#define FNAME_DLINE_LOG "./logs/dlines.log"


=/* RESTRICT_STATSK
=*                 - Define this if you want to restrict /stats k so
=*                   that it will only show if a certain spec is banned.
=*                   Ie, /stats k will tell you if you are banned or not.
=*                   /stats k <server or *> <nick/u@h> tells you if that
=*                   person is banned.
=*                   (opers still see the /stats list)
=*/
@#define RESTRICT_STATSK


=/* NO_REDUNDANT_KLINES
= *                 - This will check the kline that you try and put in
= *                   via /quote kline and will not allow it if it matches
= *                   a kline that's already in memory.
= */
@#define NO_REDUNDANT_KLINES


/* PUT_KLINES_IN_IRCD_CONF
                   - Starting in CSr25, klines can now be stored in a file
                     separated from ircd.conf.  The file name is chosen
                     via KPATH in config.h.  If QUOTE_KLINE is defined,
                     by default, when you /quote kline, it'll put these
                     new K: lines in the kline.conf file instead of ircd.conf
                     This can be used as a way to separate the millions
                     of K: lines that you may have.
*** If you do not like the idea of separate files, define this ***
*/

#undef PUT_KLINES_IN_IRCD_CONF


/* SEPARATE_QUOTE_KLINES_BY_DATE
		   - If PUT_KLINES_IN_IRCD_CONF is #undefined, you may
                     #define this to put /quote klines into separate files
                     by date.  Ie, if KPATH is "kline.conf", and today is
                     09/09/96, it'll put today's quote klines in:
                     kline.conf.960909
             Note:   These files with dates will NOT be loaded when
                     you start ircd...and if you /rehash all the quote klines
                     for the day are lost, until you manually move the ones
                     from kline.conf.960909 into kline.conf

          Purpose:   Sometimes you may not want your quote klines to last
                     more than a day, or you may want to look thru the
                     kline.conf.960909 file before you move them into
                     kline.conf.
*/

#undef SEPARATE_QUOTE_KLINES_BY_DATE


=/* LIMIT_UH        - Use this if you want to use the connect frequency
= *		      field in the Y: lines to limit that class to a
= *                   certain # of same u@h's.
= *                   For example, you can limit class 1 so that only 1
= *                   connection per u@h is allowed (by setting the confreq
= *                   field to 1)  This should cut down on clones and multiple
= *		      clients.
= *
= */
@#define LIMIT_UH


/* BUFFERED_LOGS   - define this to reduce disk IO when writing users.log
 *                    and clones.log
 */
#define BUFFERED_LOGS


=/* BETTER_MOTD      - define this to keep the MOTD in ram to reduce disk
= *                      IO.  /REHASH to reload the MOTD.
= */
@#define BETTER_MOTD


=/* NO_NICK_FLOODS   - define this to limit local users to 3 nick changes
= *                     in 60 seconds
= */
@#define NO_NICK_FLOODS


=/* RESTRICT         - define this if using dog3 stuff, and wish to
= *                     disallow /LIST and other CPU intensive commands
= *                     when in HIGH TRAFFIC MODE
= */
@#undef RESTRICT


=/* B_LINES          - Define this if you wish to ignore ip#'s or hosts
= *                     from being tested for bots or clonebots...
= *                    B:*eskimo.com::* will not check for bots or
= *                     clones from eskimo.com domain.
= */
@#define B_LINES


=/* E_LINES          - Define this if you wish to have lines that bypass
= *                    K: line checking...ie for example:
= *                    You want to K-line all of netcom.com except for
= *                    *cbehrens@*netcom.com, use:
= *                    K:*netcom.com::*
= *                    E:*netcom.com::*cbehrens
= */
@#define E_LINES 


/* MAXBUFFERS       - make receive socket buffers the maximum
                      size they can be...up to 64K
NOTE: send buffers will remain at 8K as bad things will happen if
they are increased!
*/

#define MAXBUFFERS

#ifndef MAXBUFFERS

/* This is the receive buffer size to use if MAXBUFFER isn't used: */

#define READBUFSIZE 32767

#endif

/* DBUF_INIT        - define this if you want to pre-allocate
                      4 megs of dbufs...this should help in
                      the long run according to dog3 =)
                      1000 = 1000*4kb = 4 megs
                      just #undef if you think it's unneeded =)
*/

/* #define DBUF_INIT 1000 */
#undef DBUF_INIT


/* IDENTD_ONLY      - define this if you only want people running
                      identd to connect
              Note:   Non-identd people are allowed on by
                      not putting a '@' in an I: line...
                      For example:
                        I:204.122.*::*eskimo.com::10
                      let's people on from eskimo.com even
                      if they aren't running identd
*/

#undef IDENTD_ONLY


=/* QUOTE_KLINE      - define this if you want /QUOTE KLINE
=*/
@#define QUOTE_KLINE

=/* NO_LOCAL_KLINE   - define this if you don't want little o:'s
= *                    using /QUOTE KLINE
= */
@#undef NO_LOCAL_KLINE

=/* DOG3             - define this if you want dog3's lifesux stuff.
= *                    Checks the amt of data coming in...and if it
= *                    is high, clients are checked a little less often
= */
#define DEFAULT_LOADRECV	110
#define DEFAULT_LOADCFREQ	5

@#define DOG3


/* USE_UH           - define this if you want to use n!u@h
 *                     for BAN_INFO
 */
#define USE_UH


/* BAN_INFO         - define this if you want to see who did bans
 *                    and when they were done
 */
#define BAN_INFO


/* TOPIC_INFO       - define this if you want to see who did topics
                      and when they were done
*/

#define TOPIC_INFO


/* SIGNON_TIME      - define this if you want to see when a user
                      signed into irc when doing /whois
*/

#define SIGNON_TIME


/* HIGHEST_CONNECTION - define this if you want to keep track
                        of your max connections
*/

#define HIGHEST_CONNECTION


/* NO_RED_MODES    - define this if you don't want redundant modes
                     i.e., if someone is opped they can't be opped
                     /mode +ooo nick nick nick results in
                     /mode * +o nick
*/

#undef NO_RED_MODES


/* IP_BAN_ALL      - define this if you want a really cool ban
                     system
                     What this does is if you ban an ip# like:
                     /mode * +b *!*@129.186.*  then obviously
                     those ip#'s are banned, but *!*@*iastate.edu
                     is also banned with this patch.  This is
                     nice is some machines from a site don't
                     resolve for some reason.  This way you can
                     just ban the ip#'s and even if they resolve
                     they'll be banned from channels
              Note:  This doesn't work in reverse.  If
                     you ban *!*@*iastate.edu, *!*@129.186.* is
                     not banned
*/

#define IP_BAN_ALL


/* NO_MIXED_CASE   - define this if you wish to reject usernames
                     like: FuckYou which don't have all one case
*/


#undef NO_MIXED_CASE


/* STRICT_USERNAMES
 *                  - Define this if you only want letters, numbers,
 *                   -, and _ to be allowed in usernames...
 */
#undef STRICT_USERNAMES


/* IGNORE_FIRST_CHAR - define this for NO_MIXED_CASE
                       if you wish to ignore the first character
*/

#define IGNORE_FIRST_CHAR


=/* NO_SPECIAL      - define this if you want no "special" characters
= *                    in usernames.  A character is "special" if
= *                    it's not "a-z", "A-Z", "0-9", ".", "-", and
= *                  "_"
= */
@#define NO_SPECIAL


/* REJECT_BOTS     - Performs minimal checking to see if a client
 *                    which is trying to connect is a bot...
 *                    If it is, it will be rejected from connecting.
 *                    See BOTS_NOTICE
 */
#undef REJECT_BOTS


=/* BOTS_NOTICE     - Performs minimal checking to see if a client
= *                    which is trying to connect is a bot...
= *                    If it is, it will send a notice to opers who
= *                    are usermode +r about a possible bot connecting
= *                    (or being rejected if REJECT_BOTS is defined).
= */
@#undef BOTS_NOTICE


/* STATS_NOTICE    - send a notice to /opers on the server when
 *                   someone does /stats requests
 *                    (Non-useful...just used to see who's spying ;)
 */

#undef STATS_NOTICE


/* FAILED_OPER_NOTICE - send a notice to all opers when someone
                        tries to /oper and uses an incorrect pw
*/

#define FAILED_OPER_NOTICE


=/* FNAME_FAILED_OPER - define this as a filename of a logfile
=                       if you wish to log when someone tries
=                       to /oper and uses an incorrect pw
=               Note:   The filename must exist before logging
=                       will take place.
=               Note:   #undef FNAME_FAILED_OPER if you don't
=                       want them logged
=*/

s#define FNAME_FAILED_OPER "./logs/failed.log"


=/* CLIENT_NOTICES - define this if you wish to see client connecting
= *                   and exiting notices via /umode +c
= */
@#define CLIENT_NOTICES


/* DONT_SEND_FAKES - define this if you don't want Fake: notices
                     sent to users...there are tons of fakes all
                     the time and it takes a lot of CPU to send
                     them to all +s or +f people
*/
#define DONT_SEND_FAKES


/*
 *         --- THIS OPTION NO LONGER EXISTS ---
 FK_USERMODES  - define this if you want +f and +k usermodes
                   +f would then show fakes and serverkills
                           (fakes if DONT_SEND_FAKES is not defined)
                   +k would show operkills
                   +s would not contain those anymore and would
                      just contain normal/error notices
	    Note:  the purpose of this is so that you can easily
                   do /umode -f+k to ignore serverkills and fakes
                   and easily see oper kills still
 *         --- THIS OPTION NO LONGER EXISTS ---
#define FK_USERMODES
 */


/* RESETIDLEONNOTICE - define this if idletimes should
                       be /reset on notice as well as /msg
*/
#undef  RESETIDLEONNOTICE


=/* USERNAMES_IN_TRACE - define this if you want to see usernames
=                        in /trace
=             Note:  usernames will be seen in other commands too
=                    most likely
=             Note:  also, all sites that don't have ident running
=                    will show a ~ in front of their username in
=                    this version even if you don't have a '@' in
=                    your I: lines.
=*/
@#define USERNAMES_IN_TRACE


=/* IDLE_CHECK     - define this if you wish to have an idle checker
=                    built into the server
=             Note:  Idletime is not reset on msgs to invalid nicks
=                    or channels
=             Note:  Idletime is not reset on msgs to self
=
= *** *** *** Note:  A user will not be able to reconnect for 60 seconds
=                    until after they are knocked off.  If they try to connect
=                    before then, 60 more seconds are added to each attempt.
=*** *** *** Note:  E: line u@h's are exempt from idle checking.
=
=*/
@#undef IDLE_CHECK


/* KLINE_CHECK    - this is how often (in seconds) that K: lines
                    should be checked.  Every fifteen minutes is
                    a good number (900 seconds).  This reduces
                    CPU.
            Note:   K-lines are still checked on connect and
                    on /rehash
*/

#define KLINE_CHECK 900


=/* CLONE_CHECK    - define this if you wish to enable clonebot
=                    checking
=                    The way it works is that it checks how fast
=                    people connect from the same machine
=                    Once a certain amount of clients connects from
=                    the same machine in a small amount of time,
=                    that machine is refused to connect for a minute
=                    or so  (All numbers can be defined below)
=*/
@#define CLONE_CHECK                    

/* FNAME_CLONELOG - define this if you have CLONE_CHECK defined
                    and you wish to log clones
*/

#define FNAME_CLONELOG "./logs/clones.log"


=/* DEFAULT_IDLELIMIT  - if you have CHECK_IDLE defined above,
=                        this value is the default # a client
=                        can be idle before being kicked off of
=                        IRC
=                 Note:  This value can be changed on IRC with
=                        /quote idle
=*/
+#define DEFAULT_IDLELIMIT  0

=/*  THE REST OF THIS STUFF IS TO CONFIGURE CLONE CHECKING */
=
= /*
=    Note: good numbers to use are 5 bots joining with no more than
=      4 seconds inbetween the connections
=      I.e., NUM_CLONES = 6, CLONE_RESET = 10
=  */
=
= /* NUM_CLONES - protection is enabled after this many users
=                 are counted from a site within
=                 CLONE_RESET (see below) amount of seconds!
=  */
+#define NUM_CLONES 5

=/* CLONE_RESET - after this # of seconds of no connects from
=                 a machine, the # of clones (NUM_CLONES) is reset
=                 to 0
=*/
@#define CLONE_RESET 4

=/* KILL_CLONES - define this if you wish to have previous clients
=                 from the machine in question to be exited
=        Note:   You can define a limited # of seconds that they
=                have been irc to kill them....see CLONE_TIME
=*/
@#undef  KILL_CLONES


=/* CLONE_TIME - If KILL_CLONES is defined, this is the # of
=                seconds ago the clones had to be loaded before
=                they are killed.  Grrr,  I mean for example:
=                if CLONE_TIME == 30, then all connects that
=                are 30 seconds old or less from the clone site
=                are exited (not really killed, but exited)
=*/
+#define CLONE_TIME 30


/* QHUB */
/*
 *   enables T-lines which allow you to restrict the powers
 *   of opers on test-linked servers
 *   this only works if it's a local downlink.
 */
#undef ENABLE_QHUB

/***********************************************************************/
/*             DO NOT CHANGE ANYTHING AFTER THIS POINT                 */
/***********************************************************************/

#if !defined(CLONE_CHECK) && !defined(REJECT_BOTS) && !defined(BOTS_NOTICE)
#ifdef B_LINES
#undef B_LINES
#endif
#endif

#ifdef G_LINES
#define GLINE_CONFFILE "gline.conf"
#endif

#endif /* ! __options_h_include__ */

